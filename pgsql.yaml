---
- hosts: db, db1
  become: yes
  tasks:
# These tasks install http and the php modules.
     - name: Install postgresql meta package
       yum:
         name: https://download.postgresql.org/pub/repos/yum/9.6/redhat/rhel-7-x86_64/pgdg-centos96-9.6-3.noarch.rpm
         state: present
     
     - name: Install postgresql
       yum: 
        name:
         - postgresql96-server
         - python-psycopg2
        state: present
#       update_cache: yes
#       enablerepo: epel
     
     - name: Ensure PostgreSQL data directory exists.
       file:
          path: /var/lib/pgsql/9.6/data
          owner: postgres
          group: postgres
          state: directory
          mode: 0700

     - name: Check if PostgreSQL database is initialized.
       stat:
         path: /var/lib/pgsql/9.6/data/PG_VERSION
       register: pgdata_dir_version
       become: yes
       become_user: postgres
     
     - name: Ensure PostgreSQL database is initialized.
       command:  /usr/pgsql-9.6/bin/initdb -D /var/lib/pgsql/9.6/data/
       when: not pgdata_dir_version.stat.exists
       become: yes
       become_user: postgres
       vars:
         ansible_ssh_pipelining: true
#       notify: start postgresql
     - name: Copy PGSQL config 
       command: cp -f /vagrant/cfg/pgsql/postgresql.conf /var/lib/pgsql/9.6/data/
     - command: cp -f /vagrant/cfg/pgsql/pg_hba.conf /var/lib/pgsql/9.6/data/
     
     - name: Setting PGSQL config files attributes
       file:
         path: /var/lib/pgsql/9.6/data/
         owner: postgres
         group: postgres
         mode: 0700
         recurse: yes

     - name: Start and enable postgresql
       service: name=postgresql-9.6 state=started enabled=yes
     
     - name: create postgresq user for app 
       postgresql_user:
          name: app_user
          password: "app_password"
          #encrypted: yes
          role_attr_flags:  SUPERUSER
     - name: create db for app  
       postgresql_db:
          name: app
          encoding: UTF-8
          lc_collate: en_US.UTF-8
          lc_ctype: en_US.UTF-8
          template: template0
          owner: app_user
          state: present
     
     
     #
     #- name: Install web role specific dependencies
     #  yum: name={{ item }} state=installed
     #  with_items:
     #   - git
     #
     #- name: Start firewalld
     #  service: name=firewalld state=started enabled=yes
     #
     #- name: insert firewalld rule for httpd
     #  firewalld: port=80/tcp permanent=true state=enabled immediate=yes
     #
     #- name: http service state
     #  service: name=httpd state=started enabled=yes
     #
     #- name: Configure SELinux to allow httpd to connect to remote database
     #  seboolean: name=httpd_can_network_connect_db state=true persistent=yes
         