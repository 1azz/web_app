# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
ENV['VAGRANT_NO_PARALLEL'] = 'yes'
#config.vagrant.plugins = "vagrant-vbguest"

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.define "db", primary: true do |db|
 #    db.vbguest.auto_update = false  
     db.vm.box = "centos/7"
     db.vm.hostname = "db"
     db.vm.network "private_network", :ip => '192.168.0.10',  :bridge => 'default', :dev => 'em1'
#     db.vm.network "public_network", ip: '192.168.0.10' 
     config.vm.provider :libvirt do |vb_db|
      vb_db.memory = 2048
     end
     config.vm.provision "ansible" do |ansible_db|
      ansible_db.playbook = "ansible/app/site.yml"
      ansible_db.compatibility_mode = "2.0"
     end
  end
ENV['VAGRANT_NO_PARALLEL'] = 'no'
  config.vm.define "db1" do |db1|
  #   db1.vbguest.auto_update = false  
     db1.vm.box = "centos/7"
     db1.vm.hostname = "db1"
     db1.vm.network "private_network", :ip => '192.168.0.11', :bridge => 'default', :dev => 'em1'
#     db1.vm.network "public_network", ip: '192.168.0.11'
     config.vm.provider :libvirt do |vb_db1|
       vb_db1.memory = 2048
     end
     config.vm.provision "ansible" do |ansible_db1|
      ansible_db1.playbook = "ansible/app/site.yml"
      ansible_db1.compatibility_mode = "2.0"
     end
  end

  config.vm.define "app" do |app|
     app.vm.synced_folder ".", "/vagrant"
#     app.vbguest.auto_update = false
     app.vm.box = "centos/7"
     app.vm.hostname = "app"
     app.vm.network "private_network", :ip => '192.168.0.20', :bridge => 'default', :dev => 'em1'
#     app.vm.network "public_network", ip: '192.168.0.20'
#     app.vm.network "forwarded_port", guest: 80, host: 8080
     config.vm.provider :libvirt do |vb_app|
      vb_app.memory = 1024
     end
     config.vm.provision "ansible" do |ansible_app|
      ansible_app.playbook = "ansible/app/site.yml"
      ansible_app.compatibility_mode = "2.0"
     end
  end

config.vm.define "app1" do |app1|
     app1.vm.synced_folder ".", "/vagrant"
#     app1.vbguest.auto_update = false
     app1.vm.box = "centos/7"
     app1.vm.hostname = "app1"
     app1.vm.network "private_network", :ip => '192.168.0.21', :bridge => 'default', :dev => 'em1'
#     app1.vm.network "public_network", ip: '192.168.0.21'
#     app1.vm.network "forwarded_port", guest: 80, host: 8080
     config.vm.provider :libvirt do  |vb_app1|
      vb_app1.memory = 1024
     end
     config.vm.provision "ansible" do |ansible_app1|
      ansible_app1.playbook = "ansible/app/site.yml"
      ansible_app1.compatibility_mode = "2.0"
     end
  end

config.vm.define "bal" do |bal|
     bal.vm.synced_folder ".", "/vagrant"
#     bal.vbguest.auto_update = false
     bal.vm.box = "centos/7"
     bal.vm.hostname = "bal1"
     bal.vm.network "private_network", :ip => '192.168.0.100', :bridge => 'default', :dev => 'em1'
#     bal.vm.network "public_network", ip: '192.168.0.100'
     bal.vm.network "forwarded_port", guest: 80, host: 8080
     config.vm.provider :libvirt do |vb_app|
      vb_app.memory = 1024
     end
     config.vm.provision "ansible" do |ansible_app|
      ansible_app.playbook = "ansible/app/site.yml"
      ansible_app.compatibility_mode = "2.0"
     end
  end


end
